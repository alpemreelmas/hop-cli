name: Build and Release Hop CLI

on:
  push:
    tags: ["v*"] # only build & release on version tags
  workflow_dispatch: # allow manual runs

permissions:
  contents: write # required for creating releases

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release binary
        run: cargo build --release --verbose

      - name: Run tests
        run: cargo test --verbose

      # --- Windows only: build installer ---
      - name: Install NSIS
        if: matrix.os == 'windows-latest'
        run: choco install nsis -y

      - name: Create Windows installer
        if: matrix.os == 'windows-latest'
        run: makensis installer-simple.nsi

      # --- Get version from Cargo.toml ---
      - name: Get version
        id: version
        run: |
          version=$(grep '^version =' Cargo.toml | head -1 | cut -d '"' -f2)
          echo "version=$version" >> $GITHUB_OUTPUT

      # --- Rename artifacts ---
      - name: Rename binary
        run: |
          if [[ "${{ matrix.os }}" == "Windows_NT" ]]; then
            mv hop-cli-installer.exe hop-cli-installer-v${{ steps.version.outputs.version }}.exe
            echo "artifact=hop-cli-installer-v${{ steps.version.outputs.version }}.exe" >> $GITHUB_ENV
          else
            mv target/release/hop hop-cli-v${{ steps.version.outputs.version }}-linux-x86_64
            echo "artifact=hop-cli-v${{ steps.version.outputs.version }}-linux-x86_64" >> $GITHUB_ENV
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact }}
          path: ${{ env.artifact }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/**
          draft: false
          prerelease: false
          generate_release_notes: true
